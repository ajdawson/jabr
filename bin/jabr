#!/usr/bin/env python
"""Find abbreviations for jounral names fro the ISI website."""
# Copyright (c) 2012 Andrew Dawson
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
import os
import sys
from argparse import ArgumentParser

from jabr.abbreviator import JournalAbbreviator


def main(argv=None):
    if argv is None:
        argv = sys.argv
    ap = ArgumentParser(prog=os.path.basename(argv[0]),
            description=__doc__)
    ap.add_argument('-v', '--verbose', action='store_true',
            help='verbose output')
    ap.add_argument('name', nargs='+', help='journal name')
    argns = ap.parse_args(argv[1:])
    names = argns.name
    J = JournalAbbreviator()
    for name in names:
        try:
            abbreviation = J.lookup_journal(name)
            if argns.verbose:
                print '{} = {}'.format(name, abbreviation)
            else:
                print abbreviation
        except ValueError, e:
            if argns.verbose:
                print '{}: journal not found'.format(name)
    return 0


if __name__ == '__main__':
    sys.exit(main())

